import { Options } from "nodemailer/lib/mailer";
import mailConfig from '../config/mailConfig';
import { AppMailProvider } from './../interfaces/IMailProvider';
import { createTransport } from "nodemailer";
import { handlebarOptions } from "../config/expressHandlebarsConfig";
import hbs from "nodemailer-express-handlebars";

export class MailProvider implements AppMailProvider.IMailProvider {
    sendEmail: AppMailProvider.SendEmail.Handler = ({
        to,
        subject,
        template,
        message,
        context,
    }) => {
        try {
            console.log('sendEmail:', {
                to,
                subject,
                template,
                context,
            });

            console.log('mailConfig:', mailConfig);

            if (
                (context && !template) ||
                (!context && template) ||
                (!context && !template && !message)
            )
                throw new Error("Argumentos invalidos");

            const mailOptions: Options & Pick<AppMailProvider.SendEmail.Args, "context" | "template"> = {
                from: mailConfig.auth.user,
                to,
                context,
                subject,
                template,
                html: message,
                attachments: [{
                    filename: "test.png",
                    content:
                        "",
                    cid: "logo",
                    encoding: "base64",
                    contentType: "image/png",
                }]
            }

            if (!message) delete mailOptions.html;


            const transporter = createTransport({
                host: mailConfig.host,
                port: Number(mailConfig.port),
                secure: true,
                auth: {
                    user: mailConfig.auth.user,
                    pass: mailConfig.auth.pass,
                },
                tls: {
                    rejectUnauthorized: false,
                },
            });

            transporter.use("compile", hbs(handlebarOptions));


            transporter.sendMail(mailOptions, (error, info) => {
                if (error)
                    // eslint-disable-next-line no-console
                    console.error(
                        "🆘 \t file: Mail.ts:36 \t transporter.sendMail \t error:",
                        error
                    );
                // eslint-disable-next-line no-console
                else console.log(`E-mail sent: ${info.response}`);
            });

        } catch (error) {
            throw {
                message: "Falhou ao enviar email",
                statusCode: 500,
                details: error,
            };
        }
    }
}